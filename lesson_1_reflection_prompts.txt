How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Don't have to compare the two files manually.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    If something fails after a change it's easy to compare with older versions to see what has changed.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Pros: Full control of when new versions are saved, as this will avoid incomplete code to be saved.
	Cons: Have to remember to save changes.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    When coding normally more than one file is changed so this fit with git. 
	For Google docs it's normally one file that is changed at a time.

How can you use the commands git log and git diff to view the history of files?

    Use git log to find the versions/commit id's. use git diff to compare versions.

How might using version control make you more confident to make changes that
could break something?

    If it fails it's easy to bring back the working code from previous versions.

Now that you have your workspace set up, what do you want to try using Git for?

    My code for upcoming projects.
